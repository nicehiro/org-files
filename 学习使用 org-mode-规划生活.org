#+HUGO_BASE_DIR: ~/Documents/blog/
#+hugo_section: notes
#+hugo_auto_set_lstmod: t

#+TITLE: 学习使用 orgmode gvhx 

#+DATE: 2017-05-17
#+OPTIONS: toc:nil

这段时间准备着考研，发现每天的规划有些随意，你定好的目标总是会向现实妥协，往往莫名其妙遇到一些不可推脱的琐事，浪费我的时间。或者有时候突然有些问题或是想法在脑袋一闪而过，想提笔记下来可不久后别说想法就连纸条也不知道飞哪里去了。

我急需一款能够让我死心塌地跟着走的日程规划；一款能够让我把长期的、短期的、当下的任务都记下来，方便查看的规划。我选择使用 org-mode.

我觉得 org-mode 最重要的不是语法规则，而是规划的方法。

#+TOC: headlines 2

* 规划方法

** 原则
+ 收集、处理、规划、执行、回顾
+ 开始做一件事时就不去想其他事
+ 任务规划越多越好，越详细越好；但你给自己定的计划要适可而止，如果你完成不了你定的任务，那这份规划就毫无意义
+ 突发事件来临时要果断修改今日的计划

** 收集 & 处理
写规划最开始肯定是要把自己的目标列出来。那么到底怎么列呢？

这里的方法是，不管你心里想到的是什么目标，不管是大的还是小的，不管是模糊的还是清晰的，大到考研炸飞机，小到洗袜子擦鞋，都可以写。慢慢想，多花点时间把你想要干的事情，想要塑造的形象都写上去。

比如说，我是一个健忘的人（反正就不把那些繁琐的事情放在心上），导致每次洗衣服得要拖好久，洗了衣服也总得要在楼下洗衣机里放差不多一天才记得拿上来（就有些难闻）。那么我就把我今天的这些琐事开个小分类记上去，分类标题不妨就设“琐事”，然后把今天的琐事都写到这个分类里面，最后把这个分类加上 TODO 标记，每天更新。

在比如说，我最近新买了本书《Linux Shell 脚本攻略》，而手头还有一本冰火没有看完，我就建一个分类“看书”，下设两个子分类“编程书籍”和“小说”，这样我就把我想看的所有书籍添加到这些分类下，不断完善，类推。

列出你所有的要做的事项后，开始对这些事项展开清扫工作。具体工作进程如下：
（参考自 晋如，摧如[fn:1]）

#+BEGIN_QUOTE

+ 逐一处理，马上作出决定，不要积压
+ 如果认定是垃圾，删除
+ 如果可委派别人，委派出去，将该项标签设为:WAIT:，这个标签下的事情都不用你干(爽吧)
+ 2分钟可完成的立刻干掉
+ 应该尽快采取行动但超过2分钟的，C-c C-t设为TODO
+ 这是一件不具体的事务(如养成阅读习惯)，那么确定如何实施下一步(创造条件，下载jar书)
+ 也许在将来再做的事设标签为:FUTURE:
+ 不要剩余有未处理的事项，以后注意随时添加，及时检查处理(比如前面的例子就还有四、五项
  未处理，不应该)

#+END_QUOTE

** 规划 & 执行
规划最要紧的是“先抓西瓜，再抓芝麻（我初中数学老师说的）。把你列表中最要紧的事情放到最前面，并且你确定你今天可以完成那些事情，不能太多，多了做不完，会减少你对 org-mode 的信任程度；也不能太少，少了你要 org-mode 当摆设吗？

执行一件大任务之前，先把琐事解决掉。这将决定你能否一直专注于你当前的工作二不被其他事情打扰的必要条件。像我，一般在开始编程之前，总会拿着一堆衣服先下楼塞进洗衣机，上来把洗衣这个任务标记结束，将收衣服放到最前面，在安安心心的敲代码。

开始做这件事时，把这个任务状态改成 TODO，做完之后改成 DONE，看着也赏心悦目。然后查看清单，找自己接下来应该做什么？该收衣服收衣服，该看书就拿本书慢慢看。

最后，我强烈要求大家在做规划的时候一定要认真，多花点时间把当前的所有任务都考虑到了才能行。这是你信任你的规划的基础。我们既然决定照着规划来办事，那规划就一定要万无一失值得信任，这样你才可以在执行任务的不胡思乱想，才可以就算事情再多也不怕，因为已经做好了规划，无非一项一项来嘛。

** 回顾
+ 回顾你的长期目标和短期目标
+ 查看日程表，看自己有什么 deadline 或是将要到来的 scheme 的任务
+ 万一你觉得自己哪方面不或是已经完成了某个大任务（长期的，需要不断锻炼的任务），那就再更新一下自己的长期任务列表

* 有时间再更新常用快捷键使用

[fn:1] http://blog.chinaunix.net/uid-342902-id-2416115.html

http://victor72.github.io/blog/2016/06/20/with-org-page-manage-lives/

http://www.mifengtd.cn/about/
