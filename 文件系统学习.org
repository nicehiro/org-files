[[file:index.org][{back to main page}]]
#+TITLE: 文件系统学习

#+DATE: 2017-08-13 22:45

过完操作系统之后，对各种文件系统比较感兴趣，于是学习记录一下。看到网上有些关于文件系统的错误博文，也感觉非常不舒服。毕竟那样不只是让自己无知，还让初学的读者跟着走弯路。

** 外存组织方式
   
*** 连续组织方式
为每一个文件分配一组相连接的盘块。另外在目录文件记录每个文件的开始盘块号以及文件占盘块数（或是结束盘块号也可以）。如果刚开始磁盘空间为空，那么所有文件就会一个挨着一个排在磁盘上，删除或是插入一个文件就会变得很困难。删除时候会产生外部碎片（两个文件之间很小很小很难容纳其他文件的盘块区）；插入的时候得要顺序移动插入位置前（或后）的所有盘块内容，如果此时相邻盘块无法容纳插入内容，还得要重新找一块更大的空间，将文件所有盘块都移过去。

很明显，连续组织方式顺序查找容易并且速度很快，而且也可以随机访问——可以随机访问每一盘块的内容，但是它不能灵活的插入和删除记录，并且极易产生外部碎片。

#+ATTR_HTML: :width 600 
http://oeoaak94a.bkt.clouddn.com/%E8%BF%9E%E7%BB%AD%E7%BB%84%E7%BB%87.jpg

*** 链接组织方式
可以为文件分配多个不连续的盘块，通过盘块上的链接指针，将属于同一个盘块上的所有文件链接成一个链表。

**** 显式链接
每一块盘块中除了有文件内容之外，在其最后还有一块专门的空间保存该盘块的下一盘块的地址；最后一块盘块的地址区填的是 EOF；而文件的目录项中只保存该文件开始的盘块号以及文件的长度（可有可无）。

这种方法只适用于顺序访问，不能随机访问。在访问第 i 块地址时，只能从首部开始一个盘块一个盘块的访问，效率很低。但是这种方法不会产生外部碎片，只会产生内部碎片——这是所有组织方式都会产生的，这种碎片在一个盘块内部。

#+ATTR_HTML: :width 600 
http://oeoaak94a.bkt.clouddn.com/%E6%98%BE%E7%A4%BA%E9%93%BE%E6%8E%A5.jpg

**** 隐式链接
作为显示链接的改进，把每个盘块中保存下一盘块地址的内容都保存到一张表上，称为文件分配表（File Alloction Table, FAT）。目录项中只保存每个文件开始的盘块号，之后可以去 FAT 中查找相关文件盘块号。

这种方式虽然也不能随机访问，但因为 FAT 在内存中，所以查找相应的盘块号会快很多，大大减少了访问磁盘的次数。

#+ATTR_HTML: :width 600 
http://oeoaak94a.bkt.clouddn.com/%E9%9A%90%E5%BC%8F%E9%93%BE%E6%8E%A5.jpg

**** 索引组织方式
***** 单级索引组织
实际上，打开某个文件时，我们只需要将这个文件的 FAT 调入内存，完全没有必要把整个 FAT 调入内容。因此，可以将每个文件的所有 FAT 表项放在一起（保存在一个盘块中），在目录项中保存该文件 FAT 表项的那个盘块的地址。在访问文件时，只需要将保存 FAT 表项的物理块调入内存即可。这个物理块又叫索引块。

如果为一个小文件分配一个索引块，那么它将独占一个盘块，这样造成的内部碎片的很大的。

#+ATTR_HTML: :width 600
http://oeoaak94a.bkt.clouddn.com/%E7%B4%A2%E5%BC%95%E7%BB%84%E7%BB%87.jpg

***** 多级索引组织
当一个很大的文件需要分配磁盘空间，一个索引块无法满足时，就需要分配多个索引块，然后将这些索引块通过链接组织方式链接起来。

当文件过大，需要链接的文件太多时，单级索引组织就和链接组织方法差不多了。因此，可以为这些索引在建立一次索引，称为一级索引，即用来搜索索引块的索引块。同样，也可以建立二级、三级等。

同样这种方法也没有解决小文件造成过大内部碎片的问题。

#+ATTR_HTML: :width 600
http://oeoaak94a.bkt.clouddn.com/%E4%B8%80%E7%BA%A7%E7%B4%A2%E5%BC%95%E7%BB%84%E7%BB%87.jpg

***** 混合索引方式
+ 直接地址。索引节点中保存文件盘块的直接地址，不占用单独的盘块，直接保存在文件的 FCB（File Contronler Block，文件控制块） 中
+ 一次间接地址。该地址用来寻找单级索引盘块
+ 多次间接地址。

这样，对于小文件，可以直接用直接地址表示解决；中等大小的文件用一次间接地址；大文件用多次间接地址搞定。

#+ATTR_HTML: :width 600
http://oeoaak94a.bkt.clouddn.com/%E5%A4%9A%E7%BA%A7%E7%B4%A2%E5%BC%95.jpg

** 不同文件系统
   
*** FAT 技术
微软早期文件系统一直使用 FAT（File Allocation Table） 技术。

这里引入簇的概念：
#+BEGIN_SRC quote
簇是一组相邻的扇区（盘块），在 FAT 它作为虚拟扇区，进行盘块分配时，是以簇为单位。
#+END_SRC

不难看出，引入簇会使磁盘容量增加。对于 FAT32 的系统，32 指文件系统中指向簇的地址的表示位数，32 位可以表示 =2^32= 个地址的簇，因此簇越大，此文件系统可表示的磁盘容量越大，但也因此簇的内部碎片会更大。FAT 系统使用的是显示链接方式，因此不存在什么外部碎片，而因为它是以簇为单位分配内存的，所以内部碎片会较其他系统大很多；另外，网上有不少文章说 FAT 技术的使用的是隐式链接的图解，这是错误的！ 

*** NTFS 文件组织方式
NTFS（New Technology File System），微软专门为 Windows NT 开发的文件系统。此组织方式也是以簇为单位进行分配的，为了在传输效果和簇内碎片之间进行折中，NTFS 大多情况下簇的大小都是 4KB。

NTFS 中以卷为单位，将每个卷中的所有信息（文件信息、目录信息、可用的磁盘信息）保存在一张主控文件表中（MFT，Master File Table）。每个文件作为一条记录，在表中占有一行。

如果一个文件极小，在 MFT 中便可直接保存该文件的内容；如果文件还大，MFT 中保存不下，则数据保存在其他簇中。这些簇按其所记录的文件的属性分类，分别链接成多个队列，将这些队列的指针保存到 MFT 中。

而在文件存储的过程中，多个簇大多都是相邻的（NTFS特性吧，不是很了解），因此仅用一个指针即可记录这些相邻的簇。大大节省了磁盘空间。

*** UNIX System V 文件组织方式
使用上诉所说的回合索引方式。其每个索引结点设有 13 个地址项，前 10 个为直接地址，一个一次间接地址，一个二次间接地址，一个三次间接地址。
