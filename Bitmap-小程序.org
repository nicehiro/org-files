[[file:index.org][{back to main page}]]
#+TITLE: Bitmap 小程序

#+DATE: 2016-10-11 19:01:43

这可以算是过了前期最大一个拦路虎了（网易 Android
课程），不吹不黑，网易的课上的有质量，主要是专注与应用，老师会讲的内容比较多，但每个知识点都是罗列性的过一下，所以需要我们自己好好线下去搞。我还是可以接受这种授课方式的。

#+BEGIN_HTML
  <!--more-->
#+END_HTML

** 程序要求
   :PROPERTIES:
   :CUSTOM_ID: 程序要求
   :END:

通过canvas接口绘制出Bitmap与Drawable这一节课开始时的那个位图，该图宽为12个色块，高为8个色块，每个色块填充随机颜色，并将色值按照课件中的顺序将ARGB显示出来，文字颜色为黑色。每个色块的边框宽度为2px，色块内部分割线宽度为1px，边框颜色为黑色。请将绘制结果输出到ImageView显示出来，然后以png格式保存到图片文件中，路径为/mnt/sdcard/bitmap\_table.png中。

主要用来绘制 canvas 的类：

MainActivity.java

#+BEGIN_SRC java
    package org.nicehiro.bitmaptest;
    import android.graphics.Bitmap;
    import android.graphics.Canvas;
    import android.graphics.Color;
    import android.graphics.Paint;
    import android.os.Environment;
    import android.support.v7.app.AppCompatActivity;
    import android.os.Bundle;
    import android.util.Log;
    import android.widget.ImageView;
    import android.widget.Toast;
    import java.io.FileNotFoundException;
    import java.io.FileOutputStream;
    import java.io.IOException;
    import java.util.Random;
    public class MainActivity extends AppCompatActivity {
        private ImageView imageView;
        private Bitmap bitmap;
        private Canvas canvas;
        private static final int WIDTH = 994;
        private static final int HEIGHT = 662;
        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_main);
            prepareCanvas();
            imageView = (ImageView) findViewById(R.id.canvas_draw);
            draw();
        }
        private void draw() {
            canvas.drawColor(Color.WHITE);
            imageView.setImageBitmap(bitmap);
            drawLine();
            drawMap();
        }
        private void drawMap() {
            Paint paint = new Paint();
            MyColor mapColor;
            for (int i=0; i<WIDTH; i+=83) {
                for (int j=0; j<HEIGHT; j+=83) {
                    mapColor = getRandColor();
                    paint.setColor(mapColor.getRandColor());
                    canvas.drawRect(i, j, i+81, j+81, paint);
                    paint.setColor(Color.BLACK);
                    paint.setTextSize(20);
                    paint.setTextAlign(Paint.Align.CENTER);
                    canvas.drawText(mapColor.getAlpha(), i+20, j+20, paint);
                    canvas.drawText(mapColor.getRed(), i+60, j+20, paint);
                    canvas.drawText(mapColor.getGreen(), i+20, j+60, paint);
                    canvas.drawText(mapColor.getBlue(), i+60, j+60, paint);
                }
            }
            saveBitmap();
        }
        private void drawLine() {
            Paint paint = new Paint();
            paint.setStrokeWidth(2);
            paint.setColor(Color.BLACK);
            for (int i=81; i<WIDTH; i+=83) {
                canvas.drawLine(i, 0, i, HEIGHT, paint);
            }
            for (int i = 81; i < HEIGHT; i += 83) {
                canvas.drawLine(0, i, WIDTH, i, paint);
            }
            paint.setStrokeWidth(1);
            paint.setColor(Color.GRAY);
            for (int i=41; i<WIDTH; i+=83) {
                canvas.drawLine(i, 0, i, HEIGHT, paint);
            }
            for (int i=41; i<HEIGHT; i+= 83) {
                canvas.drawLine(0, i, WIDTH, i, paint);
            }
            saveBitmap();
        }
        private void saveBitmap() {
            imageView.setImageBitmap(bitmap);
            String path = Environment.getExternalStorageDirectory().getPath() + "/mnt/sdcard/bitmap_table.png";
            try {
                FileOutputStream fos = new FileOutputStream(path);
                bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);
                fos.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        private void prepareCanvas() {
            bitmap = Bitmap.createBitmap(WIDTH, HEIGHT, Bitmap.Config.ARGB_8888);
            canvas = new Canvas(bitmap);
        }
        public MyColor getRandColor() {
            Random random = new Random();
            int a, r, g, b;
            a = random.nextInt(256);
            r = random.nextInt(256);
            g = random.nextInt(256);
            b = random.nextInt(256);
            MyColor myColor = new MyColor(a, r, g, b);
            return myColor;
        }
    }
#+END_SRC

得到随机颜色，获取颜色信息的类：

MyColor.java

#+BEGIN_SRC java
    private class MyColor {
        private int alpha;
        private int red;
        private int green;
        public String getBlue() {
            return Integer.toHexString(blue);
        }
        public String getAlpha() {
            return Integer.toHexString(alpha);
        }
        public String getRed() {
            return Integer.toHexString(red);
        }
        public String getGreen() {
            return Integer.toHexString(green);
        }
        private int blue;
        public MyColor(int alpha, int red, int green, int blue) {
            this.alpha = alpha;
            this.red = red;
            this.green = green;
            this.blue = blue;
        }
        public int getRandColor() {
            int color = Color.argb(alpha, red, green, blue);
            return color;
        }
    }
#+END_SRC

activity\_main.xml

#+BEGIN_EXAMPLE
    <?xml version="1.0" encoding="utf-8"?>
    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:id="@+id/activity_main"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/yellow"
        tools:context="org.nicehiro.bitmaptest.MainActivity">
        <ImageView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/canvas_draw"
            android:layout_marginTop="20dp"
            android:layout_centerHorizontal="true"
            android:layout_centerVertical="true"/>
    </RelativeLayout>
#+END_EXAMPLE

** 结果展示
   :PROPERTIES:
   :CUSTOM_ID: 结果展示
   :END:

[[http://oeoaak94a.bkt.clouddn.com/Screenshot_20161022-150356.png]]





