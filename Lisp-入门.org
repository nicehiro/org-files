[[file:index.org][{back to main page}]]
#+TITLE: Lisp 入门
#+DATE: 2017-03-24 21:31:06
#+OPTIONS: toc:nil

#+BEGIN_CENTER
Mar 24, 2017
#+END_CENTER

说说我是如何前脚刚下了 vim 这条贼船，后脚就上了 emacs 这另一条不归路。
复习开始了以后，整天看课本实在是难受，就买了基本书看，其中有一本是《黑客与画家》。作者讲的东西都是一些行为准则（黑客/程序员），从这本书里我学到了真正的黑客准则，意识到了我决不想仅仅当一个码农，所以跟着也被他狠狠安利了一遍
lisp 语法。

就他所说的一些特性来说，我是真的体会到了。当然不是从 lisp，而是从
Java、Python 中体会到的。他说，lisp
语法的好多特性被现在一些语言所继承，java 的垃圾回收机制在 lisp
发明之初就已经被 lisp 使用了；python 的闭包语法特性也是继承自
lisp。我了解闭包，那种把函数作为参数使用的语法确实一开始把我搞蒙了，因而也记忆比较深刻。而
emacs 则是因为网上好多大神都说 emacs 写 lisp 比较好，而 emacs 本身也是
lisp 实现的，学好了自己配置下 emacs 或是写几个小插件自己用也是很舒服的。

想想那些推崇自由软件（放浪不羁）的大神们，记得王勇（Deepin
主要维护人）写过一片博客，介绍了他当时使用 Emacs 并成功开发过几款 Emacs
插件的经历，字里行间看得出他是很自豪的；而王垠大神也在去年写过一片《Lisp
已死，Lisp 永存》的博文，也大力夸赞了 lisp 语法。

#+TOC: headlines 2

#+BEGIN_HTML
  <!--more-->
#+END_HTML

** Emacs 初步
   :PROPERTIES:
   :CUSTOM_ID: emacs-初步
   :END:

*** 安装
    :PROPERTIES:
    :CUSTOM_ID: 安装
    :END:

我目前使用的是 Debian 系的 Deepin
系统，所以装软件比较方便一些。一般直接使用 =apt get install=
就可以搞定大部分安装。

*** 查看官方文档
    :PROPERTIES:
    :CUSTOM_ID: 查看官方文档
    :END:

官方文档有一个对新手的初步教学文档，有中文版，在 Emacs 里可以通过命令
=M-x help-with-tutorial=
进入（M：Alt键）。文档包含了基本的一些命令，也没多少页，可以边看边操作，尽快上手
Emacs。

*** 插件安装
    :PROPERTIES:
    :CUSTOM_ID: 插件安装
    :END:

如果你之前是个 vimer，那么在看完帮助文档后第一个感觉就是这 Emacs
按键简直没法和 Vim 比。我说最简单的上下左右移动吧，Vim 中使用 H、J、K、L
来移动，正好是右手四个手指放的地方，舒服的很；而 Emacs 移动需要配合 Ctrl
键，移动的按键是按照英文单词的首字母来选的，（比如向前移动，是 Ctrl +
F，F 即是 Forward 的首字母）用起来很难受。这时候我发现了大名鼎鼎的
Evil，在 Emacs 中使用 Vim 操作的插件。

直接在 Emacs 的包管理器中
查找安装即可。但原谅我不知道该选哪一个包......一查 Evil，一堆以 Evil
开头的包出现，所以我选择从 github 找源码安装：

克隆到本地 =~/.emacs.d/evil= 目录下：

#+BEGIN_EXAMPLE
    git clone https://github.com/emacs-evil/evil
#+END_EXAMPLE

配置 =.emacs=：

#+BEGIN_EXAMPLE
    (add-to-list 'load-path "~/.emacs.d/evil")
    (require 'evil)
    (evil-mode 1)
#+END_EXAMPLE

依赖：（undo-tree.el） https://www.emacswiki.org/emacs/UndoTree

之后就可以在 Emacs 上使用 Vim 了。

*** Lisp 编译环境
    :PROPERTIES:
    :CUSTOM_ID: lisp-编译环境
    :END:

使用网上推荐的：Emacs + slime + sbcl 组合：

从官网下源码安装： http://www.sbcl.org/

安装 slime：

#+BEGIN_EXAMPLE
    sudo apt install slime
#+END_EXAMPLE

修改配置文件：

#+BEGIN_EXAMPLE
        (setq inferior-lisp-program "sbcl")
    (require 'slime-autoloads)
    (slime-setup '(slime-fancy))
    (slime-setup '(slime-company))
#+END_EXAMPLE

打开 Emacs，输入 =M-x slime= 就可以进入 lisp 的 shell 环境了。

其实为了方便，我最后选择直接 clone 大神的 emacs.d 配置了......
https://github.com/nicehiro/emacs.d

** 参考
   :PROPERTIES:
   :CUSTOM_ID: 参考
   :END:

-  http://mazhuang.org/2015/05/10/emacs/#common-lisp-开发环境
-  http://www.aichengxu.com/linux/11309002.html
-  https://astraybicn.wordpress.com/2015/08/01/%E6%80%8E%E4%B9%88%E4%B8%BAemacs%E5%AE%89%E8%A3%85common-lisp%E7%8E%AF%E5%A2%83%EF%BC%88slime%EF%BC%8Bsbcl%EF%BC%8Bquicklisp%EF%BC%89/






