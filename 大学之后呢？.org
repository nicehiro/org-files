#+HUGO_BASE_DIR: ~/Documents/blog/
#+hugo_section: notes
#+hugo_auto_set_lstmod: t

#+TITLE: 我的大学

#+DATE: 2017-03-17
#+OPTIONS: toc:nil

大三了，就要毕业了，身边的同学考研的考研，工作的工作，当然，还有些不知道自己该干嘛的正在纠结中，也有成绩不合格被强制退学收拾东西回家的。总之都忙得很，不知道干了些什么就马上白天变黑夜了。就好像大学没上过一样，临到真正走向社会的时候不知所措，总觉得做些什么才能让自己心里踏实。

#+TOC: headlines 2

** 考研

我打算考研。说实话，刚开始是不想去考的。

我大二的时候从生命科学学院转到计算机学院，学了一年，不说成绩，光说编程能力，我可以说我不弱于别人（当然有学校排名差的原因）。之后我开始学习安卓等前端的语言，关注了许多这方面的编程大神，也开发过几个小应用。当时心里想的是，考研需要吗？考研能学些什么东西？考研真的能把我编程能力提高吗？当时的答案是
No。我不认为考研学的那几本厚厚的书对我有什么帮助，当时我坚信：当我需要什么知识的时候在去找相关的知识去学是最有效的学习方式。

这句话现在看起来也是不错的。需要什么就去学什么就好了，还能和兴趣挂钩，提高很快的吧。

确实很快，但其实是最慢最没有效率的方法！

家里人一直在劝我要我考研，所以大三开始就耐着性子开始看那四本专业书（《计算机组成原理》、《操作系统》、《计算机网络》、《数据结构》）。因为当时我在学
Python，关于网络的知识挺多的，于是我打算先开始看《计算机网络》。刚开始很苦涩的一本书，物理层、数据链路层的知识我们没有或是很少在现实生活中实实在在接触过，但看到后面就越来越清晰了。很难形容当从物理层一直看到应用层时的感觉，用我初中数学老师的话来说，就像有一层薄纸挡在了你的面前，轻轻一戳就得到答案，但你就是很难找到戳哪。

举个例子，我们都知道在新搭一个博客的时候，如果你只用 IP
地址来看你的博客，要记很长难记的 IP
地址才行，这时候你要新注册一个域名，通过域名来找你的博客，这时候你需要把你的域名和
IP 地址通过 DNS
来解析，这样才能通过你的域名找到你的博客。是的，光是搞个域名就这么麻烦，想想我在大二的时候像没头苍蝇一样四处找文章看，看到的是一堆莫名其妙的专业术语，光是照着步骤一步一步来都费劲，你敢说这种兴趣可以让你开心的继续下去吗？好，就算不惧艰险终于搞定了这些，成功解析出了地址，你知道那些原理吗？你不知道的（起码我不知道，到我搭好我的博客将近半年时间我都说不上来
DNS 是个什么东西，怎么干的域名解析？）！

我真感觉我在网上学的东西有断层，知识的断层。网上各种各样的教程很多，但那些教程再好，无非是各种操作详细一些，傻瓜式的操作在网上是被推崇的，大家都喜欢明明白白手把手教学，我也不例外。但那样我们很难学到为什么要那样做。

这也和学校课程安排不合理有关。就拿网络那本书来说吧。前面的教程极其枯燥，但后面的教程简直就是新大陆，讲
HTTP，讲邮件协议，讲 FTP 原理，讲 BT 种子原理，讲 P2P
原理等等都是网络上可以直接接触并熟知的东西。但老师没有讲，原因之一是课时不够，之二是书作者建议时间不够可以只学前六章（最枯燥的！）！就算好不容易熬过前六章，到了可以亲自在网上实践的内容，老师不往后介绍了，反而考试的重点也在前六章，所以大家自然没工夫更没心情去看后面的东西，那么哪来兴趣去学，又哪来时间把前面的和后面的联系到一起。

所以，一般专科软件学校出来的同学对软件怎么写、IDE
怎么操作相当熟悉，而本科院校出来的一般编程能力要弱。

** 2017-04-13 更新 很难受，不得不再吐槽这大学了！

我们这学期有一门课，软件测试，那老师非要要求我们上一个 mooctest
网站去下载一个所谓的测试用的插件。

你让我再去用 eclipse 我可以接受，但你哪个插件只接受 1.7 版本的 Java
是怎么回事？？难道你不知道 JDK1.8 出来有多久了吗？Oracle
官网都已经找不到 1.7 的包了啊！

好，去找 JDK1.7
的包也不是很难，毕竟可以在云盘里面搞得到。然后就是做一系列倒退历史的事！替换本机的
JDK1.8 到 JDK1.7！换完感觉自己都倒退了 10 年！不过幸好 Linux
有很好的替换机制，可以直接用 update-alternatives
来替换而不丢掉原来的版本。

好，换好了 JDK1.7 应该可以直接使用了吧。结果一打开报错：

[[http://oeoaak94a.bkt.clouddn.com/eclipse.jpg]]

好，修改那需要的依赖改为 JDK1.7 的版本试试。

结果还是出错！

最后上网上查了下，找到了最终的解决方法：
http://stackoverflow.com/questions/18050878/eclipse-exits-with-error-jvm-terminated

[[http://oeoaak94a.bkt.clouddn.com/eclipse-solusion.jpg]]

In general, the 4.6 release of the Eclipse Project is developed on Java
SE 8 VMs. As such, the Eclipse SDK as a whole is targeted at all modern,
desktop Java VMs.

大致是说 4.6 版本之后的 Eclipse 是在 Java SE 8 VMs
上开发的，所以不管你怎么改都是没用的。唯一的方法就是放弃 JDK1.7 奔向
JDK1.8！

好嘛，饶了一圈又回来了。我为了装个环境搞到现在（凌晨）心情不好，只想说两句来痛快痛快。

所以，最后想问一下负责开发那个插件的老师，升级一下插件版本有那么麻烦吗？好歹听说你们还要搞个全国范围的测试大赛，想一直用
JDK1.7 到死吗？？？

以上！

** 2017-06-01 更新 最近迷上了 =org-mode=
来管理我的每一天的事务，并且也渐渐把写博客的格式从 markdown 向 org-mode
迁移。道阻且长吧。我到是很希望看看我坚持 1 个月之后，org-mode
能给我多大的改变。

写博客不能再像以前那样的盲目的勤快，那样写出来的文章都是水文，一堆没有思想的代码构成的文字，没有自己的思考，又能指望给自己或是别人带来什么有用的帮助吗？所以我现在越来越反感那些只有一堆操作的文章，那些文章只会一步步细心的交给你每一步傻瓜式的操作，食之无味。好的文章应该是思想和代码一起放上来，教你思想你好理解，教你代码方便你实际操作。我记得看《Java
设计模式》的时候里面有译者的一句话让我记忆很深，大致就是说，最垃圾的注释就是那种照着代码一步步解释给你看的注释，比如说我写个=i += 1=，然后旁边来一句注释=i 自加=------废话，我难道不知道这操作是要干什么吗？而你真正要写的注释应该是你为什么要让
i
自加，如果没必要完全可以不用写！不要把别人看得太傻，也请不要暴露你自己的水平！

在大学最重要的事是什么？大一刚来，我会说是坚持泡图书馆，幻想着的日子是每天吃喝拉撒都在图书馆周围度过------天真幼稚的我；大二的时候我刚转专业，我会说是坚持敲代码，敲越多的代码就代表你懂得东西越多------还是
native
得很；而现在，我会说是找一门你自己会坚持一辈子的兴趣。前两天和室友去食堂一个小饭馆吃饭，饭馆里面开着一台电视机，播的是湖南台的综艺节目。闲着没事看了几分钟就看不下去了。综艺节目假的要死，主持人随随便便几个扯不着边的话题就能让台下观众感动的流泪？是我太男人了还是你们泪点太低？但是这种东西却是大众最喜欢用来打发时间的。所以，找一门自己可以一辈子喜欢而不会厌倦的兴趣吧，让你在无聊的时候不用闲到看那种垃圾综艺来打发时间。

从我接触这个专业来，就一直有人在我面前吹嘘（懂的或是不懂的）------“你只要学会一门语言其他语言就自然而然也很懂了！”。真的是这样吗？绝对不是。你学完
c，学完 java，再去学学 JavaScript
看看，绝对是两个不同的语言，也绝非你所能马上精通的。所以，这句话改一下我才能认同：你需要学一门前端语言和一门后端语言，才能说可以很快看懂其他语言的代码。

最近还在补上学期落下的 Android 课程。从 sqlite 底层开始一步步看，看到了
Greendao
的使用。原来听课的时候一脸懵逼，现在完全没有那种感觉了。我觉得封装的东西固然好用，简易，但你一定要在理解了基本的底层的原理之后再去使用它，不然就是像盖楼工人一样只会一步一步的照着设计图纸叠砖，照着手册做事情，说句实话没有任何技术水平的，而那些画图纸的工程师才是真正牛逼的人物。

